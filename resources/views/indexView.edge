<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.css" rel="stylesheet">
    <style>
        .handsontable tbody th,
        .handsontable thead th,
        .handsontable tbody th.ht__active_highlight,
        .handsontable thead th.ht__active_highlight {
            background-color: #696969;
            color: #fff;
        }
    </style>
</head>

<body>
    <div id="example"></div>
    <a href="javascript:;" id="export">export CSV</a>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handsontable/dist/handsontable.full.min.js"></script>
    <script>
        $(document).ready(function(){
            var container = document.getElementById('example');
            var lastChange = null;
            var hot = new Handsontable(container, {
            data: {{{ toJSON(users) }}},
            columns: [
                {data: "firstname", type: 'dropdown', source: ['William', 'Camille', 'Julia', 'Carlos']},
                {data: "lastname", type: "text"},
                {data: "email", type: "text"},
                {data: "phonenumber", type: "numeric"}
            ],
            rowHeaders: true,
            colHeaders: true,
            colHeaders: ["firstname","lastname", "email", "phonenumber"],
            columnSorting: true,
            colWidths: [160, 160, 200, 200],
            manualRowMove: true,
            beforeChange: function (change, source) {}
            });
            // hot.updateSettings({
            //     beforeKeyDown: function (e) {
            //     console.log("fff",e.target)
            //     var selection = hot.getSelected();

            //     // BACKSPACE or DELETE
            //     if (e.keyCode === 8 || e.keyCode === 46) {
            //         e.stopImmediatePropagation();
            //         // remove data at cell, shift up
            //         hot.spliceCol(selection[1], selection[0], 1);
            //         e.preventDefault();
            //     }
            //     // ENTER
            //     else if (e.keyCode === 13) {
            //         // if last change affected a single cell and did not change it's values
            //         if (lastChange && lastChange.length === 1 && lastChange[0][2] == lastChange[0][3]) {
            //         e.stopImmediatePropagation();
            //         hot.spliceCol(selection[1], selection[0], 0, ''); // add new cell
            //         hot.selectCell(selection[0], selection[1]); // select new cell
            //         }
            //     }

            //     lastChange = null;
            //     }
            // }
            // );
            
            $("#export").click(function(){
                const exportPlugin = hot.getPlugin('exportFile');
                exportPlugin.downloadFile('csv', {filename: 'MyFile'});
            }); 
        })

    </script>
</body>

</html>